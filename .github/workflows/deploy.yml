name: Deploy Laravel to cPanel via SSH

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    name: ðŸŽ‰ Deploy to cPanel via SSH
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction

      - name: Generate .env file from GitHub secrets
        run: |
          echo "APP_NAME='${{ secrets.APP_NAME }}'" > .env
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=${{ secrets.APP_DEBUG }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "" >> .env
          echo "LOG_CHANNEL=${{ secrets.LOG_CHANNEL }}" >> .env
          echo "LOG_DEPRECATIONS_CHANNEL=${{ secrets.LOG_DEPRECATIONS_CHANNEL }}" >> .env
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
          echo "" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> .env
          echo "" >> .env
          echo "BROADCAST_DRIVER=${{ secrets.BROADCAST_DRIVER }}" >> .env
          echo "CACHE_DRIVER=${{ secrets.CACHE_DRIVER }}" >> .env
          echo "FILESYSTEM_DISK=${{ secrets.FILESYSTEM_DISK }}" >> .env
          echo "QUEUE_CONNECTION=${{ secrets.QUEUE_CONNECTION }}" >> .env
          echo "SESSION_DRIVER=${{ secrets.SESSION_DRIVER }}" >> .env
          echo "SESSION_LIFETIME=${{ secrets.SESSION_LIFETIME }}" >> .env
          echo "" >> .env
          echo "MEMCACHED_HOST=${{ secrets.MEMCACHED_HOST }}" >> .env
          echo "" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "" >> .env
          echo "MAIL_MAILER=${{ secrets.MAIL_MAILER }}" >> .env
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD='${{ secrets.MAIL_PASSWORD }}'" >> .env
          echo "MAIL_ENCRYPTION=${{ secrets.MAIL_ENCRYPTION }}" >> .env
          echo "MAIL_FROM_ADDRESS='${{ secrets.MAIL_FROM_ADDRESS }}'" >> .env
          echo "MAIL_FROM_NAME='${{ secrets.MAIL_FROM_NAME }}'" >> .env
          echo "" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> .env
          echo "AWS_BUCKET=${{ secrets.AWS_BUCKET }}" >> .env
          echo "AWS_USE_PATH_STYLE_ENDPOINT=${{ secrets.AWS_USE_PATH_STYLE_ENDPOINT }}" >> .env
          echo "" >> .env
          echo "PUSHER_APP_ID=${{ secrets.PUSHER_APP_ID }}" >> .env
          echo "PUSHER_APP_KEY=${{ secrets.PUSHER_APP_KEY }}" >> .env
          echo "PUSHER_APP_SECRET=${{ secrets.PUSHER_APP_SECRET }}" >> .env
          echo "PUSHER_HOST=${{ secrets.PUSHER_HOST }}" >> .env
          echo "PUSHER_PORT=${{ secrets.PUSHER_PORT }}" >> .env
          echo "PUSHER_SCHEME=${{ secrets.PUSHER_SCHEME }}" >> .env
          echo "PUSHER_APP_CLUSTER=${{ secrets.PUSHER_APP_CLUSTER }}" >> .env
          echo "" >> .env
          echo "VITE_APP_NAME='${{ secrets.VITE_APP_NAME }}'" >> .env
          echo "VITE_PUSHER_APP_KEY=${{ secrets.VITE_PUSHER_APP_KEY }}" >> .env
          echo "VITE_PUSHER_HOST=${{ secrets.VITE_PUSHER_HOST }}" >> .env
          echo "VITE_PUSHER_PORT=${{ secrets.VITE_PUSHER_PORT }}" >> .env
          echo "VITE_PUSHER_SCHEME=${{ secrets.VITE_PUSHER_SCHEME }}" >> .env
          echo "VITE_PUSHER_APP_CLUSTER=${{ secrets.VITE_PUSHER_APP_CLUSTER }}" >> .env

      # Only run key:generate if APP_KEY is not already set
      - name: Generate application key if not set
        run: |
          if [ -z "$APP_KEY" ] || [ "$APP_KEY" == "base64:base64:" ]; then
            php artisan key:generate --force
          fi
        env:
          APP_KEY: ${{ secrets.APP_KEY }}

      - name: Run database migrations with backup
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |

            # Create database backup
            mysqldump -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_DATABASE }} > database_backup_\$(date +%Y%m%d_%H%M%S).sql

            # Check if migrations will run successfully
            php artisan migrate:status

            # Run migrations
            php artisan migrate --force

            # Verify application is working
            php artisan tinker --execute="echo 'Application is working';"

      - name: Build assets (if using Laravel Mix)
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build
          fi

      - name: Remove unnecessary files
        run: |
          rm -rf node_modules
          rm -rf .git
          rm -rf .github

      - name: ðŸ“‚ Upload files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./*"
          target: ${{ secrets.SSH_TARGET_DIR }}
